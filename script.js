const result = document.querySelector('.result'); // Seleciona o elemento HTML com a classe 'result' e armazena na vari√°vel 'result'
const humanScore = document.querySelector('#human-score'); // Seleciona o elemento HTML com o ID 'human-score' e armazena na vari√°vel 'humanScore'
const machineScore = document.querySelector('#machine-score'); // Seleciona o elemento HTML com o ID 'machine-score' e armazena na vari√°vel 'machineScore'

let humanScoreNumber = 0; // Inicializa a vari√°vel para armazenar a pontua√ß√£o do jogador humano
let machineScoreNumber = 0; // Inicializa a vari√°vel para armazenar a pontua√ß√£o do rob√¥

const playHuman = (humanChoice) => { // Declara√ß√£o da fun√ß√£o playHuman que recebe um argumento 'humanChoice'
    playTheGame(humanChoice, playMachine()); // Chama a fun√ß√£o playTheGame passando a escolha do jogador humano e a escolha gerada aleatoriamente pela fun√ß√£o playMachine
}

const playMachine = () => { // Declara√ß√£o da fun√ß√£o playMachine que gera uma escolha aleat√≥ria para o rob√¥
    const choices = ['rock', 'paper', 'scisors']; // Array contendo as op√ß√µes 'rock', 'paper' e 'scisors'
    const randomNumber = Math.floor(Math.random() * 3); // Gera um n√∫mero aleat√≥rio entre 0 e 2  Math.random() * 3 gera um n√∫mero aleat√≥rio entre 0 (inclusivo) e 3 (exclusivo), o que significa que pode retornar n√∫meros decimais entre 0 e 2.9999... Para converter esse n√∫mero para um n√∫mero inteiro entre 0 e 2, √© usado Math.floor() para arredondar para baixo, resultando em um n√∫mero inteiro.

    console.log(randomNumber); // Exibe o n√∫mero aleat√≥rio gerado no console

    return choices[randomNumber]; // Retorna a escolha aleat√≥ria do rob√¥
}

const playTheGame = (human, machine) => { // Declara√ß√£o da fun√ß√£o playTheGame que verifica o resultado do jogo entre o jogador humano e o rob√¥
    console.log('Humano:' + human + "maquina:" + machine); // Exibe no console as escolhas do jogador humano e do rob√¥

    if (human === machine) { // Verifica se houve empate
        result.innerHTML = "Deu empate üòê"; // Exibe mensagem de empate no elemento com a classe 'result'
    } else if (
        (human === 'rock' && machine === 'scissors') || // Verifica se o jogador humano ganhou
        (human === 'paper' && machine === 'rock') ||
        (human === 'scissors' && machine === 'paper')
    ) {
        humanScoreNumber++; // Incrementa a pontua√ß√£o do jogador humano
        humanScore.innerHTML = humanScoreNumber; // Atualiza a pontua√ß√£o do jogador humano no elemento com o ID 'human-score'
        result.innerHTML = "Voc√™ ganhou! üòä"; // Exibe mensagem de vit√≥ria no elemento com a classe 'result'
    } else {
        machineScoreNumber++; // Incrementa a pontua√ß√£o do rob√¥
        machineScore.innerHTML = machineScoreNumber; // Atualiza a pontua√ß√£o do rob√¥ no elemento com o ID 'machine-score'
        result.innerHTML = "Voc√™ perdeu para o rob√¥! üò¢"; // Exibe mensagem de derrota no elemento com a classe 'result'
    }
}
